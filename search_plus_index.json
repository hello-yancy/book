{"./":{"url":"./","title":"前言","keywords":"","body":"不积跬步，无以至千里；不积小流，无以成江海不积跬步，无以至千里；不积小流，无以成江海 Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-27 13:20:41 "},"content/development/readme.html":{"url":"content/development/readme.html","title":"软件开发","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2019-12-29 09:16:26 "},"content/development/javascript/readme.html":{"url":"content/development/javascript/readme.html","title":"JavaScript","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:21:42 "},"content/development/javascript/node.js/readme.html":{"url":"content/development/javascript/node.js/readme.html","title":"Node.js","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:22:16 "},"content/development/javascript/node.js/install-nodejs.html":{"url":"content/development/javascript/node.js/install-nodejs.html","title":"安装Node.js","keywords":"","body":"1. Linux下安装Node.js1.1 下载并安装1.2 配置环境变量1.3 验证安装结果2. Windows下安装Node.js2.1 下载并安装1. Linux下安装Node.js 1.1 下载并安装 从Node.js的官网，下载安装包node-v10.16.0-linux-x64.tar.xz，并上传至后台 cd /usr/local/src xz -d node-v10.16.0-linux-x64.tar.xz tar -xf node-v10.16.0-linux-x64.tar mv node-v10.16.0-linux-x64 /opt/node chmod 755 -R /opt/node 1.2 配置环境变量 打开/etc/profile文件，并在该文件的底部增加如下内容 export NODE_HOME=/opt/node export PATH=$NODE_HOME/bin:$PATH 执行source /etc/profile使配置生效 1.3 验证安装结果 使用node -v和npm -v命令，验证安装是否成功，示例如下： $ node -v v10.16.0 $ npm -v 6.9.0 2. Windows下安装Node.js 2.1 下载并安装 从Node.js的官网，下载安装包node-v10.16.0-x64.msi，双击并安装 注：验证方法参考Linux下的方法 Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:32:57 "},"content/development/javascript/react/readme.html":{"url":"content/development/javascript/react/readme.html","title":"React","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:26:14 "},"content/development/javascript/vue/readme.html":{"url":"content/development/javascript/vue/readme.html","title":"Vue","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:26:15 "},"content/development/backend/readme.html":{"url":"content/development/backend/readme.html","title":"后端语言","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-02-09 11:20:59 "},"content/development/database/readme.html":{"url":"content/development/database/readme.html","title":"数据库","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:28:13 "},"content/development/database/mongodb/readme.html":{"url":"content/development/database/mongodb/readme.html","title":"MongoDB","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:28:18 "},"content/development/database/mongodb/install-mongodb.html":{"url":"content/development/database/mongodb/install-mongodb.html","title":"安装MongoDB","keywords":"","body":"1. Linux下安装MonogoDB1.1 下载并安装1.2 配置环境变量1.3 创建数据库目录1.4 安装中的问题2. Windows下安装MonogoDB2.1 下载并安装3. 参考1. Linux下安装MonogoDB 1.1 下载并安装 从MonogoDB的官网，下载安装包，并上传至后台 /usr/local/src cd /usr/local/src sudo tar -xzf mongodb-linux-x86_64-ubuntu1604-4.2.3.tgz sudo mv mongodb-linux-x86_64-ubuntu1604-4.2.3 /opt/mongodb chmod 755 -R /opt/node 1.2 配置环境变量 打开/etc/profile文件，并在该文件的底部增加如下内容 export MONGODB_HOME=/opt/mongodb export PATH=$MONGODB_HOME/bin:$PATH 执行source /etc/profile使配置生效 1.3 创建数据库目录 MongoDB的数据存储在 /data/db 目录下，但是这个目录在安装过程不会自动创建，所以需要手动创建 mkdir -p /data/db 注：/data/db 是 MongoDB 默认的启动的数据库路径；如果数据库目录不是/data/db，可以通过 --dbpath 来指定。 1.4 安装中的问题 在 /opt/mongodb/bin 下使用./mongod启动时，提示如下错误： ./mongod: /usr/lib/x86_64-linux-gnu/libcurl.so.4: version `CURL_OPENSSL_3' not found (required by ./mongod) 解决方法如下（见参考2）: sudo apt-get remove --auto-remove libcurl4-openssl-dev sudo apt-get install libcurl3 -y 2. Windows下安装MonogoDB 2.1 下载并安装 从MonogoDB的官网，下载安装包，双击并安装 3. 参考 Linux平台安装MongoDB Version `CURL_OPENSSL_3' not found Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-02-10 10:14:58 "},"content/development/database/cassandra/readme.html":{"url":"content/development/database/cassandra/readme.html","title":"Cassandra","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-02-09 12:03:46 "},"content/development/database/redis/readme.html":{"url":"content/development/database/redis/readme.html","title":"Redis","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:28:19 "},"content/software/readme.html":{"url":"content/software/readme.html","title":"常用软件","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2019-12-29 09:16:23 "},"content/software/create-a-gitbook.html":{"url":"content/software/create-a-gitbook.html","title":"GitBook","keywords":"","body":"1. 准备工作1.1 安装 Node.js1.2 安装 GitBook2. 创建新书2.1 新建仓库2.2 初始化新书2.3 预览新书2.4 归档源码2.4.1 添加 .gitignore 文件2.4.2 添加 publish.js 文件2.4.3 上传源码2.5 发布新书2.5.1 创建 gh-papes 分支2.5.2 开启 GitHub Pages 功能3. 配置新书3.1 添加 book.json 文件3.2 自定义页面样式4.5. 参考1. 准备工作 1.1 安装 Node.js 参考安装 Node.js 1.2 安装 GitBook 使用如下命令安装 GitBook 命令行工具： $ npm install gitbook-cli -g 输入如下命令，查看 GitBook 版本，验证是否安装成功 $ gitbook -V 2. 创建新书 2.1 新建仓库 在 Github 上新建一个仓库 book ，用于托管代码，如下： 2.2 初始化新书 创建一个本地目录，将 book 仓库克隆到本地，并使用 gitbook init 命令初始化 $ mkdir gitbook $ cd gitbook $ git clone https://github.com/hello-yancy/book $ cd book $ gitbook init 2.3 预览新书 使用以下命令会运行一个 web 服务, 通过 http://localhost:4000/ 预览书籍 $ gitbook serve 2.4 归档源码 2.4.1 添加 .gitignore 文件 在 book 目录下，新建 .gitignore 文件，并在该文件中，输入如下内容： _book node_modules 说明： 使用 gitbook serve 或者 gitbook build 命令后，会在 _book 目录下生成静态网站文件，这些文件是不需要归档到保存源码的 master 分支的 使用 gitbook install 命令后，会在 node_modules 目录下安装插件，这些文件也是不需要归档到 master 分支的 2.4.2 添加 publish.js 文件 在 book 目录下，新建 publish.js 文件，并在该文件中，输入如下内容： var ghpages = require('gh-pages'); ghpages.publish('_book', { branch: 'gh-pages', repo: 'https://github.com/hello-yancy/book' }, function(){ console.log('push to origin gh-pages success') }); 说明： 该文件是一键式发布 GitBook 的脚本，具体使用方法参考发布新书章节 branch：将 _book 目录下的所有文件上传到 gh-pages 分支 repo： gh-pages 分支的路径 2.4.3 上传源码 将 book 目录下的所有文件，作第一次提交，提交到 master 分支，如下： $ git add SUMMARY.md publish.js .gitignore $ git commit -m \"first commit\" $ git push origin master 提交后， master 分支下的文件目录结构如下： - book |- .gitignore |- README.md |- SUMMARY.md |- publish.js 2.5 发布新书 2.5.1 创建 gh-papes 分支 此时 book 目录下，使用 gitbook serve 命令已经可以浏览新书了，接下来我们将生成的静态网站文件，提交到 gh-papes 分支，作第一次新书发布（此时 Github 上的 book 仓库应该只有 master 分支，发布后会自动创建 gh-papes 分支） 在 2.4.2 章节已经提到了，将使用 publish.js 脚本来发布 GitBook，由于该脚本使用了gh-pages模块，因此先要安装该模块，命令如下： $ npm install gh-pages --save-dev 安装成功之后(仅需安装一次)，使用如下命令发布 GitBook $ node publish.js 2.5.2 开启 GitHub Pages 功能 必须打开 GitHub Pages 后，才能在 GitHub 上浏览新书。开关在 book 仓库的 Setting > Options > GitHub Pages 路径下，操作方法如下： 3. 配置新书 3.1 添加 book.json 文件 原生的 GitBook 样式比较单一，美观度和功能欠佳，可以通过相关插件进行拓展。在 book 目录下，创建 book.json 文件，具体内容可以参考book.json 3.2 自定义页面样式 在 book/styles 目录下，创建 website.css 文件，用于修改默认样式： 4. - book |- book.json |- .gitignore |- README.md |- SUMMARY.md |- publish.js |- styles |- |- website.css |- content |- |- xxx.md 5. 参考 GitBook插件整理 gitbook常用的插件 gitbook安装与使用 【Markdown】Shell命令高亮显示 gitbook中book.json文件详解 Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:36:43 "},"content/faq/readme.html":{"url":"content/faq/readme.html","title":"FAQ","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2019-12-29 09:15:58 "}}