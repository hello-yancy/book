{"./":{"url":"./","title":"前言","keywords":"","body":"不积跬步，无以至千里；不积小流，无以成江海不积跬步，无以至千里；不积小流，无以成江海 Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-27 13:20:41 "},"content/development/readme.html":{"url":"content/development/readme.html","title":"软件开发","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2019-12-29 09:16:26 "},"content/development/javascript/readme.html":{"url":"content/development/javascript/readme.html","title":"JavaScript","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:21:42 "},"content/development/javascript/node.js/readme.html":{"url":"content/development/javascript/node.js/readme.html","title":"Node.js","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:22:16 "},"content/development/javascript/node.js/install-nodejs.html":{"url":"content/development/javascript/node.js/install-nodejs.html","title":"安装Node.js","keywords":"","body":"1. Linux下安装Node.js1.1 下载并安装1.2 配置环境变量1.3 验证安装结果2. Windows下安装Node.js2.1 下载并安装1. Linux下安装Node.js 1.1 下载并安装 从Node.js的官网，下载安装包node-v10.16.0-linux-x64.tar.xz，并上传至后台 cd /usr/local/src xz -d node-v10.16.0-linux-x64.tar.xz tar -xf node-v10.16.0-linux-x64.tar mv node-v10.16.0-linux-x64 /opt/node chmod 755 -R /opt/node 1.2 配置环境变量 打开/etc/profile文件，并在该文件的底部增加如下内容 export NODE_HOME=/opt/node export PATH=$NODE_HOME/bin:$PATH 执行source /etc/profile使配置生效 1.3 验证安装结果 使用node -v和npm -v命令，验证安装是否成功，示例如下： $ node -v v10.16.0 $ npm -v 6.9.0 2. Windows下安装Node.js 2.1 下载并安装 从Node.js的官网，下载安装包node-v10.16.0-x64.msi，双击并安装 注：验证方法参考Linux下的方法 Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:32:57 "},"content/development/javascript/react/readme.html":{"url":"content/development/javascript/react/readme.html","title":"React","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:26:14 "},"content/development/javascript/vue/readme.html":{"url":"content/development/javascript/vue/readme.html","title":"Vue","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:26:15 "},"content/development/backend/readme.html":{"url":"content/development/backend/readme.html","title":"后端语言","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-02-09 11:20:59 "},"content/development/database/readme.html":{"url":"content/development/database/readme.html","title":"数据库","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:28:13 "},"content/development/database/mongodb/readme.html":{"url":"content/development/database/mongodb/readme.html","title":"MongoDB","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:28:18 "},"content/development/database/mongodb/install-mongodb.html":{"url":"content/development/database/mongodb/install-mongodb.html","title":"安装MongoDB","keywords":"","body":"1. Linux下安装MonogoDB1.1 下载并安装1.2 配置环境变量1.3 创建数据库目录1.4 安装中的问题2. Windows下安装MonogoDB2.1 下载并安装3. 参考1. Linux下安装MonogoDB 1.1 下载并安装 从MonogoDB的官网，下载安装包，并上传至后台 /usr/local/src cd /usr/local/src sudo tar -xzf mongodb-linux-x86_64-ubuntu1604-4.2.3.tgz sudo mv mongodb-linux-x86_64-ubuntu1604-4.2.3 /opt/mongodb chmod 755 -R /opt/node 1.2 配置环境变量 打开/etc/profile文件，并在该文件的底部增加如下内容 export MONGODB_HOME=/opt/mongodb export PATH=$MONGODB_HOME/bin:$PATH 执行source /etc/profile使配置生效 1.3 创建数据库目录 MongoDB的数据存储在 /data/db 目录下，但是这个目录在安装过程不会自动创建，所以需要手动创建 mkdir -p /data/db 注：/data/db 是 MongoDB 默认的启动的数据库路径；如果数据库目录不是/data/db，可以通过 --dbpath 来指定。 1.4 安装中的问题 在 /opt/mongodb/bin 下使用./mongod启动时，提示如下错误： ./mongod: /usr/lib/x86_64-linux-gnu/libcurl.so.4: version `CURL_OPENSSL_3' not found (required by ./mongod) 解决方法如下（见参考2）: sudo apt-get remove --auto-remove libcurl4-openssl-dev sudo apt-get install libcurl3 -y 2. Windows下安装MonogoDB 2.1 下载并安装 从MonogoDB的官网，下载安装包，双击并安装 3. 参考 Linux平台安装MongoDB Version `CURL_OPENSSL_3' not found Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-02-10 10:14:58 "},"content/development/database/cassandra/readme.html":{"url":"content/development/database/cassandra/readme.html","title":"Cassandra","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-02-09 12:03:46 "},"content/development/database/cassandra/install-cassandra.html":{"url":"content/development/database/cassandra/install-cassandra.html","title":"安装Cassandra","keywords":"","body":"1. Linux下安装Cassandra1.1 下载并安装1.2 配置环境变量1.3 启动Cassandra1.5 安装可视化工具DevCenter2. Windows下安装Cassandra2.1 下载并安装1. Linux下安装Cassandra 1.1 下载并安装 从Cassandra官网，下载安装包apache-cassandra-3.11.3-bin.tar.gz，并上传至Linux服务器/usr/local/src目录下，并执行以下安装命令 cd /usr/local/src tar -C /usr/local -zxf apache-cassandra-3.11.3-bin.tar.gz 解压之后，目录下的文件如下： cd /usr/local/src tar -C /usr/local -zxf apache-cassandra-3.11.3-bin.tar.gz 1.2 配置环境变量 打开/etc/profile文件，并在该文件的底部增加如下内容 export CASSANDRA_HOME=/usr/local/apache-cassandra-3.11.3 export PATH=$CASSANDRA_HOME/bin:$PATH 执行source /etc/profile使配置生效 1.3 启动Cassandra 使用如下命令，以后台方式启动Cassandra： $ cd /usr/local/apache-cassandra-3.11.3 $ cassandra 注：cassandra -f表示绑定到console 1.5 安装可视化工具DevCenter 2. Windows下安装Cassandra 2.1 下载并安装 注：验证方法参考Linux下的方法 Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-02-16 22:54:18 "},"content/development/database/redis/readme.html":{"url":"content/development/database/redis/readme.html","title":"Redis","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:28:19 "},"content/software/readme.html":{"url":"content/software/readme.html","title":"常用软件","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2019-12-29 09:16:23 "},"content/software/create-a-gitbook.html":{"url":"content/software/create-a-gitbook.html","title":"GitBook","keywords":"","body":"1. 准备工作1.1 安装 Node.js1.2 安装 GitBook2. 创建新书2.1 新建仓库2.2 初始化新书2.3 预览新书2.4 归档源码2.4.1 添加 .gitignore 文件2.4.2 添加 publish.js 文件2.4.3 上传源码2.5 发布新书2.5.1 创建 gh-papes 分支2.5.2 开启 GitHub Pages 功能3. 配置新书3.1 添加 book.json 文件3.2 自定义页面样式4.5. 参考1. 准备工作 1.1 安装 Node.js 参考安装 Node.js 1.2 安装 GitBook 使用如下命令安装 GitBook 命令行工具： $ npm install gitbook-cli -g 输入如下命令，查看 GitBook 版本，验证是否安装成功 $ gitbook -V 2. 创建新书 2.1 新建仓库 在 Github 上新建一个仓库 book ，用于托管代码，如下： 2.2 初始化新书 创建一个本地目录，将 book 仓库克隆到本地，并使用 gitbook init 命令初始化 $ mkdir gitbook $ cd gitbook $ git clone https://github.com/hello-yancy/book $ cd book $ gitbook init 2.3 预览新书 使用以下命令会运行一个 web 服务, 通过 http://localhost:4000/ 预览书籍 $ gitbook serve 2.4 归档源码 2.4.1 添加 .gitignore 文件 在 book 目录下，新建 .gitignore 文件，并在该文件中，输入如下内容： _book node_modules 说明： 使用 gitbook serve 或者 gitbook build 命令后，会在 _book 目录下生成静态网站文件，这些文件是不需要归档到保存源码的 master 分支的 使用 gitbook install 命令后，会在 node_modules 目录下安装插件，这些文件也是不需要归档到 master 分支的 2.4.2 添加 publish.js 文件 在 book 目录下，新建 publish.js 文件，并在该文件中，输入如下内容： var ghpages = require('gh-pages'); ghpages.publish('_book', { branch: 'gh-pages', repo: 'https://github.com/hello-yancy/book' }, function(){ console.log('push to origin gh-pages success') }); 说明： 该文件是一键式发布 GitBook 的脚本，具体使用方法参考发布新书章节 branch：将 _book 目录下的所有文件上传到 gh-pages 分支 repo： gh-pages 分支的路径 2.4.3 上传源码 将 book 目录下的所有文件，作第一次提交，提交到 master 分支，如下： $ git add SUMMARY.md publish.js .gitignore $ git commit -m \"first commit\" $ git push origin master 提交后， master 分支下的文件目录结构如下： - book |- .gitignore |- README.md |- SUMMARY.md |- publish.js 2.5 发布新书 2.5.1 创建 gh-papes 分支 此时 book 目录下，使用 gitbook serve 命令已经可以浏览新书了，接下来我们将生成的静态网站文件，提交到 gh-papes 分支，作第一次新书发布（此时 Github 上的 book 仓库应该只有 master 分支，发布后会自动创建 gh-papes 分支） 在 2.4.2 章节已经提到了，将使用 publish.js 脚本来发布 GitBook，由于该脚本使用了gh-pages模块，因此先要安装该模块，命令如下： $ npm install gh-pages --save-dev 安装成功之后(仅需安装一次)，使用如下命令发布 GitBook $ node publish.js 2.5.2 开启 GitHub Pages 功能 必须打开 GitHub Pages 后，才能在 GitHub 上浏览新书。开关在 book 仓库的 Setting > Options > GitHub Pages 路径下，操作方法如下： 3. 配置新书 3.1 添加 book.json 文件 原生的 GitBook 样式比较单一，美观度和功能欠佳，可以通过相关插件进行拓展。在 book 目录下，创建 book.json 文件，具体内容可以参考book.json 3.2 自定义页面样式 在 book/styles 目录下，创建 website.css 文件，用于修改默认样式： 4. - book |- book.json |- .gitignore |- README.md |- SUMMARY.md |- publish.js |- styles |- |- website.css |- content |- |- xxx.md 5. 参考 GitBook插件整理 gitbook常用的插件 gitbook安装与使用 【Markdown】Shell命令高亮显示 gitbook中book.json文件详解 Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-01-12 09:36:43 "},"content/software/jetbrains/readme.html":{"url":"content/software/jetbrains/readme.html","title":"JetBrains","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-02-16 12:07:39 "},"content/software/jetbrains/install-idea.html":{"url":"content/software/jetbrains/install-idea.html","title":"IntelliJ IDEA","keywords":"","body":"1. Linux下安装IntelliJ IDEA1.1 下载并安装2. 配置IntelliJ IDEA3. 快捷键3.1 常用3.2 Edit3.3 Find3.4 Navigate3.5 Code3.6 Completion3.7 Folding3.7 Folding3.8 Refactor4. 参考1. Linux下安装IntelliJ IDEA 1.1 下载并安装 从IntelliJ IDEA的官网，下载社区版的安装包 ideaIC-2019.3.tar.gz，并上传至后台 /usr/local/src cd /usr/local/src tar -C /usr/local -zxf ideaIC-2019.3.tar.gz 2. 配置IntelliJ IDEA 名称 路径 设置 显示空格 File > Settings > Editor > General > Appearance 1. Show whitespaces: 勾选 调整字体 File > Settings > Editor > Font 1. Font: Consolas 2. Size: 14 设置Tab键为4个空格 File > Settings > Editor > Code Style > Java 1. Use tab character: 去勾选 2. Indent: 4 3. 快捷键 3.1 常用 动作 快捷键 说明 Move Caret to Code Block End Ctrl + ] 诸如{}围起来的代码块，使用该快捷键可以快速跳转至代码块的结尾处 Move Caret to Code Block Start Ctrl + [ 同上，快速跳至代码块的开始出 Complete Current Statement Ctrl + Shift + Enter 将输入的if、for、函数等等补上{}或者;使代码语句完整 Start New Line Shift + Enter 在当前行的下方开始新行 Start New Line Before Current Ctrl + Alt + Enter 在当前行上方插入新行 Delete to Word End Ctrl + Delete 删除光标所在至单词结尾处的所有字符 Delete to Word Start Ctrl + BackSpace 删除光标所在至单词开头的所有字符 Move Caret to Previous Word Ctrl + 向左箭头 将光标移至前一个单词 Move Caret to Next Word Ctrl + 向右箭头 将光标移至后一个单词 Scroll Up Ctrl + 向上箭头 向上滚动一行 Scroll Down Ctrl + 向下箭头 向下滚动一行 Extend Selection Ctrl + W 选中整个单词 Toggle Case Ctrl + Shift + U 切换大小写 3.2 Edit 动作 快捷键 说明 Undo Ctrl + Z 撤销 Redo Ctrl + Shift + Z 重做 Cut Ctrl + X 剪切 Copy Ctrl + C 复制 Paste Ctrl + V 粘贴 Join Lines Ctrl + Shift + J 将选中的行合并成一行 3.3 Find 动作 快捷键 说明 Find Ctrl + F 在当前文件中查找 Replace Ctrl + R 替换字符串 Find in Path Ctrl + Shift + F 在全局文件中查找字符串 Replace in Path Ctrl + Shift + R 在全局中替换字符串 Find Usages Alt + F7 查找当前变量的使用，并列表显示 Show Usages Ctrl + Alt + F7 查找当前变量的使用，并直接对话框显示 Find Usages in File Ctrl + F7 在文件中查找符号的使用 Highlight Usages in File Ctrl + Shift + F7 在文件中高亮显示变量的使用 3.4 Navigate 动作 快捷键 说明 Class… Ctrl + N 查找类文件 File… Ctrl + Shift + N 查找文件 Line… Ctrl + G 定位到文件某一行 Back Alt + 向左箭头 返回至上次光标位置 Forward Alt + 向右箭头 返回至后一次光标位置 Last Edit Location Ctrl + Shift + Backspace 返回上次编辑位置 Next Edit Location Ctrl + Shift + 反斜杠 返回后一次编辑位置 Declaration Ctrl + B 定位至变量定义的位置 Implementation(s) Ctrl + Alt + B 定位至选中类或方法的具体实现 Type Declaration Ctrl + Shift + B 直接定位至光标所在变量的类型定义 Super Method Ctrl + U 直接定位至当前方法override或者implements的方法定义处 File Structure Ctrl + F12 显示当前文件的文件结构 File Path Ctrl + Alt + F12 显示当前文件的路径，并可以方便的将相关父路径打开 Type Hierarchy Ctrl + H 显示当前类的继承层次 Method Hierarchy Ctrl + Shift + H 显示当前方法的继承层次 Call Hierarchy Ctrl + Alt + H 显示当前方法的调用层次 Next Highlighted Error F2 定位至下一个错误处 Previous Highlighted Error Shift + F2 定位至前一个错误处 Previous Occurrence Ctrl + Alt + 向上箭头 查找前一个变量共现的地方 Next Occurrence Ctrl + Alt + 向下箭头 查找下一个变量共现的地方 3.5 Code 动作 快捷键 说明 Override Methods… Ctrl + O 重写基类的方法 Implement Methods… Ctrl + I 实现基类或接口中的方法 Generate… Alt + Insert 产生构造方法、getter/setter等方法 Surround With… Ctrl + Alt + T 将选中的代码使用if、while、try/catch等包装 Unwrap/Remove… Ctrl + Shift + Delete 去除相关的包装代码 Insert Live Template Ctrl + J 插入Live Template Surround with Live Template Ctrl + Alt + J 使用Live Template包装 Comment with Line Comment Ctrl + / 使用//进行注释 Comment with Block Comment Ctrl + Shift + / 使用/**/进行注释 Reformat Code Ctrl + Alt + L 格式化代码 Auto-Indent Lines Ctrl + Alt + I 自动缩进行 Optimize Imports Ctrl + Alt + O 优化import Move Statement Down Ctrl + Shift + 向下箭头 将光标所在的代码块向下整体移动 Move Statement Up Ctrl + Shift + 向上箭头 将光标所在的代码块向上移动 Move Element Left Ctrl + Alt + Shift + 向左箭头 将元素向左移动 Move Element Right Ctrl + Alt + Shift + 向右箭头 将元素向右移动 Move Line Down Alt + Shift + 向下箭头 将行向下移动 Move Line Up Alt + Shift + 向上箭头 将行向上移动 3.6 Completion 动作 快捷键 说明 Basic Alt + / 自动完成 SmartType Alt + Enter 自动提示完成 3.7 Folding 动作 快捷键 说明 Expand Ctrl + = 展开代码 Collapse Ctrl + - 收缩代码 Expand Recursively Ctrl + Alt + = 递归展开代码 Collapse Recursively Ctrl + Alt + - 递归收缩代码 Expand All Ctrl + Shift + = 展开所有代码 Collapse All Ctrl + Shift + - 收缩所有代码 3.7 Folding 动作 快捷键 说明 Expand Ctrl + = 展开代码 Collapse Ctrl + - 收缩代码 Expand Recursively Ctrl + Alt + = 递归展开代码 Collapse Recursively Ctrl + Alt + - 递归收缩代码 Expand All Ctrl + Shift + = 展开所有代码 Collapse All Ctrl + Shift + - 收缩所有代码 3.8 Refactor 动作 快捷键 说明 Rename Shift + F6 重命名 Change Signature Ctrl + F6 更改函数签名 Type Migration Ctrl + Shift + F6 更改类型 4. 参考 【java】IntelliJ IDEA常用快捷键 IntelliJ IDEA常用快捷键 Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2020-02-16 20:50:52 "},"content/faq/readme.html":{"url":"content/faq/readme.html","title":"FAQ","keywords":"","body":"Copyright © Yancy 2019 all right reserved，powered by Gitbook该文章修订时间： 2019-12-29 09:15:58 "}}